// This file provides types for the API.
//
// Code generated by github.com/MarkRosemaker DO NOT EDIT.

package notion

import (
	"net/url"
	"time"

	"github.com/google/uuid"
)

// File defines a model
type File struct {
	Type     string       `json:"type,omitzero"`
	External FileExternal `json:"external"`
}

// FileExternal defines a model
type FileExternal struct {
	URL url.URL `json:"url,omitzero"`
}

// Icon defines a model
type Icon struct {
	Type  string `json:"type,omitzero"`
	Emoji string `json:"emoji,omitzero"`
}

// The Page object contains the [property values](https://developers.notion.com/reference/property-value-object) of a single Notion page.
//
// All pages have a parent. If the parent is a [database](https://developers.notion.com/reference/database), the property values conform to the schema laid out database's [properties](https://developers.notion.com/reference/property-object). Otherwise, the only property value is the `title`.
//
// Page content is available as [blocks](https://developers.notion.com/reference/block). The content can be read using [retrieve block children](https://developers.notion.com/reference/get-block-children) and appended using [append block children](https://developers.notion.com/reference/patch-block-children).
type Page struct {
	// Always "page".
	Object string    `json:"object,omitzero"`
	ID     uuid.UUID `json:"id,omitzero"`
	// Date and time when this page was created. Formatted as an ISO 8601 date time string.
	CreatedTime time.Time `json:"created_time,omitzero"`
	// Date and time when this page was updated. Formatted as an ISO 8601 date time string.
	LastEditedTime time.Time      `json:"last_edited_time,omitzero"`
	CreatedBy      UserReference  `json:"created_by"`
	LastEditedBy   UserReference2 `json:"last_edited_by"`
	Cover          File           `json:"cover"`
	Icon           Icon           `json:"icon"`
	Parent         Parent         `json:"parent"`
	// The archived status of the page.
	Archived   bool           `json:"archived,omitzero"`
	InTrash    bool           `json:"in_trash,omitzero"`
	Properties PropertyValues `json:"properties"`
	// The URL of the Notion page.
	URL       url.URL   `json:"url,omitzero"`
	PublicURL url.URL   `json:"public_url,omitzero"`
	RequestID uuid.UUID `json:"request_id,omitzero"`
}

// Parent defines a model
type Parent struct {
	Type   string    `json:"type,omitzero"`
	PageID uuid.UUID `json:"page_id,omitzero"`
}

// PropertyValues defines a model
type PropertyValues struct {
	Title PropertyValuesTitle `json:"title"`
}

// PropertyValuesTitle defines a model
type PropertyValuesTitle struct {
	ID    string                   `json:"id,omitzero"`
	Type  string                   `json:"type,omitzero"`
	Title PropertyValuesTitleTitle `json:"title,omitempty"`
}

// PropertyValuesTitleTitle defines a model
type PropertyValuesTitleTitle []PropertyValuesTitleTitleItems

// PropertyValuesTitleTitleItems defines a model
type PropertyValuesTitleTitleItems struct {
	Type        string                                   `json:"type,omitzero"`
	Text        PropertyValuesTitleTitleItemsText        `json:"text"`
	Annotations PropertyValuesTitleTitleItemsAnnotations `json:"annotations"`
	PlainText   string                                   `json:"plain_text,omitzero"`
	Href        struct{}                                 `json:"href"`
}

// PropertyValuesTitleTitleItemsAnnotations defines a model
type PropertyValuesTitleTitleItemsAnnotations struct {
	Bold          bool   `json:"bold,omitzero"`
	Italic        bool   `json:"italic,omitzero"`
	Strikethrough bool   `json:"strikethrough,omitzero"`
	Underline     bool   `json:"underline,omitzero"`
	Code          bool   `json:"code,omitzero"`
	Color         string `json:"color,omitzero"`
}

// PropertyValuesTitleTitleItemsText defines a model
type PropertyValuesTitleTitleItemsText struct {
	Content string   `json:"content,omitzero"`
	Link    struct{} `json:"link"`
}

// UserReference defines a model
type UserReference struct {
	Object string    `json:"object,omitzero"`
	ID     uuid.UUID `json:"id,omitzero"`
}

// UserReference2 defines a model
type UserReference2 struct {
	Object string    `json:"object,omitzero"`
	ID     uuid.UUID `json:"id,omitzero"`
}
