{
  "openapi": "3.1.0",
  "info": {
    "title": "Notion API",
    "description": "[Create an integration](https://www.notion.so/my-integrations) to retrieve an API token, add your database and page ID's as variables in the collection, and start making your requests!\n\nFor our full documentation, including sample integrations and guides, visit [developers.notion.com](developers.notion.com)\n\nNeed more help? Join our [developer community on Slack](https://join.slack.com/t/notiondevs/shared_invite/zt-lkrnk74h-YmPRroySRFGiqgjI193AqA/)",
    "version": "2022-06-28"
  },
  "servers": [
    {
      "url": "https://api.notion.com/v1"
    }
  ],
  "paths": {
    "/pages/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/NotionVersion"
        },
        {
          "$ref": "#/components/parameters/id"
        }
      ],
      "get": {
        "tags": [
          "Pages"
        ],
        "summary": "Retrieve a Page",
        "description": "Retrieves a Page object using the ID in the request path. This endpoint exposes page properties, not page content.",
        "operationId": "GetPage",
        "responses": {
          "200": {
            "$ref": "#/components/responses/PageResponse"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Annotations": {
        "description": "Style information which applies to the whole rich text object.",
        "type": "object",
        "properties": {
          "bold": {
            "description": "Whether the text is **bolded**.",
            "type": "boolean",
            "example": false
          },
          "italic": {
            "description": "Whether the text is *italicized*.",
            "type": "boolean",
            "example": false
          },
          "strikethrough": {
            "description": "Whether the text is struck through.",
            "type": "boolean",
            "example": false
          },
          "underline": {
            "description": "Whether the text is underlined.",
            "type": "boolean",
            "example": false
          },
          "code": {
            "description": "Whether the text is code `style`.",
            "type": "boolean",
            "example": false
          },
          "color": {
            "$ref": "#/components/schemas/Color"
          }
        },
        "required": [
          "bold",
          "italic",
          "strikethrough",
          "underline",
          "code",
          "color"
        ],
        "example": {
          "bold": false,
          "italic": false,
          "strikethrough": false,
          "underline": false,
          "code": false,
          "color": "default"
        }
      },
      "Color": {
        "description": "The color of the block.",
        "type": "string",
        "enum": [
          "default",
          "gray",
          "brown",
          "orange",
          "yellow",
          "green",
          "blue",
          "purple",
          "pink",
          "red",
          "gray_background",
          "brown_background",
          "orange_background",
          "yellow_background",
          "green_background",
          "blue_background",
          "purple_background",
          "pink_background",
          "red_background"
        ],
        "example": "default"
      },
      "ExternalFile": {
        "description": "An external file is any URL that isn't hosted by Notion.",
        "type": "object",
        "properties": {
          "url": {
            "description": "Link to the externally hosted content.",
            "type": "string",
            "format": "uri",
            "example": "https://www.notion.so/images/page-cover/nasa_space_shuttle_columbia_and_sunrise.jpg"
          }
        },
        "required": [
          "url"
        ],
        "example": {
          "url": "https://www.notion.so/images/page-cover/nasa_space_shuttle_columbia_and_sunrise.jpg"
        }
      },
      "File": {
        "description": "File objects contain data about files uploaded to Notion as well as external files linked in Notion.",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FileType"
          },
          "external": {
            "$ref": "#/components/schemas/ExternalFile"
          }
        },
        "required": [
          "type"
        ],
        "example": {
          "type": "external",
          "external": {
            "url": "https://www.notion.so/images/page-cover/nasa_space_shuttle_columbia_and_sunrise.jpg"
          }
        }
      },
      "FileType": {
        "description": "Type of this file object.",
        "type": "string",
        "enum": [
          "file",
          "external"
        ],
        "example": "external"
      },
      "Icon": {
        "description": "Page or database icon. It is either an emoji or a file.",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/IconType"
          },
          "emoji": {
            "description": "Emoji character.",
            "type": "string",
            "pattern": "^[^\\w\\s]+$",
            "example": "ðŸŒ„"
          }
        },
        "required": [
          "type"
        ],
        "example": {
          "type": "emoji",
          "emoji": "ðŸŒ„"
        }
      },
      "IconType": {
        "description": "Type of icon.",
        "type": "string",
        "enum": [
          "emoji",
          "file",
          "external"
        ],
        "example": "emoji"
      },
      "Link": {
        "description": "An inline link in a text.",
        "type": "object"
      },
      "Page": {
        "description": "The Page object contains the [property values](https://developers.notion.com/reference/property-value-object) of a single Notion page.\n\nAll pages have a parent. If the parent is a [database](https://developers.notion.com/reference/database), the property values conform to the schema laid out database's [properties](https://developers.notion.com/reference/property-object). Otherwise, the only property value is the `title`.\n\nPage content is available as [blocks](https://developers.notion.com/reference/block). The content can be read using [retrieve block children](https://developers.notion.com/reference/get-block-children) and appended using [append block children](https://developers.notion.com/reference/patch-block-children).",
        "type": "object",
        "properties": {
          "object": {
            "description": "Always \"page\".",
            "type": "string",
            "pattern": "^page$",
            "example": "page"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "96245c8f-1784-44a4-82ad-1941127c3ec3"
          },
          "created_time": {
            "description": "Date and time when this page was created. Formatted as an ISO 8601 date time string.",
            "type": "string",
            "format": "date-time",
            "example": "2022-07-14T05:31:00.000Z"
          },
          "last_edited_time": {
            "description": "Date and time when this page was updated. Formatted as an ISO 8601 date time string.",
            "type": "string",
            "format": "date-time",
            "example": "2024-10-14T11:26:00.000Z"
          },
          "created_by": {
            "$ref": "#/components/schemas/UserReference"
          },
          "last_edited_by": {
            "$ref": "#/components/schemas/UserReference"
          },
          "cover": {
            "$ref": "#/components/schemas/File"
          },
          "icon": {
            "$ref": "#/components/schemas/Icon"
          },
          "parent": {
            "$ref": "#/components/schemas/Parent"
          },
          "archived": {
            "description": "The archived status of the page.",
            "type": "boolean",
            "example": false
          },
          "in_trash": {
            "type": "boolean",
            "example": false
          },
          "properties": {
            "$ref": "#/components/schemas/PropertyValues"
          },
          "url": {
            "description": "The URL of the Notion page.",
            "type": "string",
            "format": "uri",
            "example": "https://www.notion.so/Example-Page-96245c8f178444a482ad1941127c3ec3"
          },
          "public_url": {
            "type": "string",
            "format": "uri",
            "example": "https://fae-tools.notion.site/Example-Page-96245c8f178444a482ad1941127c3ec3"
          },
          "request_id": {
            "type": "string",
            "format": "uuid",
            "example": "3620d8d3-11e4-473b-87c9-fddfa7801d6d"
          }
        },
        "required": [
          "object",
          "id",
          "created_time",
          "last_edited_time",
          "created_by",
          "last_edited_by",
          "cover",
          "icon",
          "parent",
          "archived",
          "in_trash",
          "properties",
          "url",
          "public_url",
          "request_id"
        ],
        "example": {
          "object": "page",
          "id": "96245c8f-1784-44a4-82ad-1941127c3ec3",
          "created_time": "2022-07-14T05:31:00.000Z",
          "last_edited_time": "2024-10-14T11:26:00.000Z",
          "created_by": {
            "object": "user",
            "id": "af171d5d-c36f-45bc-a0a3-6086c0dafa45"
          },
          "last_edited_by": {
            "object": "user",
            "id": "af171d5d-c36f-45bc-a0a3-6086c0dafa45"
          },
          "cover": {
            "type": "external",
            "external": {
              "url": "https://www.notion.so/images/page-cover/nasa_space_shuttle_columbia_and_sunrise.jpg"
            }
          },
          "icon": {
            "type": "emoji",
            "emoji": "ðŸŒ„"
          },
          "parent": {
            "type": "page_id",
            "page_id": "11f88fcd-daf4-802e-b645-eb2d041a759b"
          },
          "archived": false,
          "in_trash": false,
          "properties": {
            "title": {
              "id": "title",
              "type": "title",
              "title": [
                {
                  "type": "text",
                  "text": {
                    "content": "Example Page",
                    "link": null
                  },
                  "annotations": {
                    "bold": false,
                    "italic": false,
                    "strikethrough": false,
                    "underline": false,
                    "code": false,
                    "color": "default"
                  },
                  "plain_text": "Example Page",
                  "href": null
                }
              ]
            }
          },
          "url": "https://www.notion.so/Example-Page-96245c8f178444a482ad1941127c3ec3",
          "public_url": "https://fae-tools.notion.site/Example-Page-96245c8f178444a482ad1941127c3ec3",
          "request_id": "3620d8d3-11e4-473b-87c9-fddfa7801d6d"
        }
      },
      "Parent": {
        "description": "The `parent` property of a page or database contains these keys. Mandatory when creating, must be missing when updating.",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ParentType"
          },
          "page_id": {
            "type": "string",
            "format": "uuid",
            "example": "11f88fcd-daf4-802e-b645-eb2d041a759b"
          }
        },
        "required": [
          "type"
        ],
        "example": {
          "type": "page_id",
          "page_id": "11f88fcd-daf4-802e-b645-eb2d041a759b"
        }
      },
      "ParentType": {
        "description": "The type of the parent.",
        "type": "string",
        "enum": [
          "page_id",
          "workspace",
          "block_id",
          "database_id"
        ],
        "example": "page_id"
      },
      "PropertyType": {
        "description": "Type of the property.",
        "type": "string",
        "enum": [
          "rich_text",
          "number",
          "select",
          "status",
          "multi_select",
          "date",
          "formula",
          "relation",
          "rollup",
          "title",
          "people",
          "files",
          "checkbox",
          "url",
          "email",
          "phone_number",
          "created_time",
          "created_by",
          "last_edited_time",
          "last_edited_by",
          "button"
        ],
        "example": "title"
      },
      "PropertyValue": {
        "description": "A property value defines the identifier, type, and value of a page property in a page object. It's used when retrieving and updating pages ex: Create and Update pages.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Underlying identifier for the property. This identifier is guaranteed to remain constant when the property name changes. It may be a UUID, but is often a short random string.\n\nThe id may be used in place of name when creating or updating pages.",
            "type": "string",
            "example": "title"
          },
          "type": {
            "$ref": "#/components/schemas/PropertyType"
          },
          "title": {
            "$ref": "#/components/schemas/RichTexts"
          }
        },
        "required": [
          "id",
          "type"
        ],
        "example": {
          "id": "title",
          "type": "title",
          "title": [
            {
              "type": "text",
              "text": {
                "content": "Example Page",
                "link": null
              },
              "annotations": {
                "bold": false,
                "italic": false,
                "strikethrough": false,
                "underline": false,
                "code": false,
                "color": "default"
              },
              "plain_text": "Example Page",
              "href": null
            }
          ]
        }
      },
      "PropertyValues": {
        "description": "Properties of a page or database.",
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/PropertyValue"
        },
        "example": {
          "title": {
            "id": "title",
            "type": "title",
            "title": [
              {
                "type": "text",
                "text": {
                  "content": "Example Page",
                  "link": null
                },
                "annotations": {
                  "bold": false,
                  "italic": false,
                  "strikethrough": false,
                  "underline": false,
                  "code": false,
                  "color": "default"
                },
                "plain_text": "Example Page",
                "href": null
              }
            ]
          }
        }
      },
      "RichText": {
        "description": "Rich text objects contain data for displaying formatted text, mentions, and equations. A rich text object also contains annotations for style information. Arrays of rich text objects are used [within property objects](https://developers.notion.com/reference/database-property) and [property value objects](https://developers.notion.com/reference/page-property-value) to create what a user sees as a single text value in Notion.",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/RichTextType"
          },
          "text": {
            "$ref": "#/components/schemas/Text"
          },
          "annotations": {
            "$ref": "#/components/schemas/Annotations"
          },
          "plain_text": {
            "description": "The plain text without annotations.",
            "type": "string",
            "example": "Example Page"
          },
          "href": {
            "description": "The URL of any link or internal Notion mention in this text, if any.",
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "type",
          "text",
          "annotations",
          "plain_text"
        ],
        "example": {
          "type": "text",
          "text": {
            "content": "Example Page",
            "link": null
          },
          "annotations": {
            "bold": false,
            "italic": false,
            "strikethrough": false,
            "underline": false,
            "code": false,
            "color": "default"
          },
          "plain_text": "Example Page",
          "href": null
        }
      },
      "RichTextType": {
        "description": "Type of this rich text object.",
        "type": "string",
        "enum": [
          "text",
          "mention",
          "equation"
        ],
        "example": "text"
      },
      "RichTexts": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/RichText"
        },
        "example": [
          {
            "type": "text",
            "text": {
              "content": "Example Page",
              "link": null
            },
            "annotations": {
              "bold": false,
              "italic": false,
              "strikethrough": false,
              "underline": false,
              "code": false,
              "color": "default"
            },
            "plain_text": "Example Page",
            "href": null
          }
        ]
      },
      "Text": {
        "description": "Text objects contain this information within the `text` property of a RichText object.",
        "type": "object",
        "properties": {
          "content": {
            "description": "Text content. This field contains the actual content of your text and is probably the field you'll use most often.",
            "type": "string",
            "example": "Example Page"
          },
          "link": {
            "$ref": "#/components/schemas/Link"
          }
        },
        "required": [
          "content"
        ],
        "example": {
          "content": "Example Page",
          "link": null
        }
      },
      "UserReference": {
        "type": "object",
        "properties": {
          "object": {
            "description": "Always \"user\"",
            "type": "string",
            "pattern": "^user$",
            "example": "user"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "af171d5d-c36f-45bc-a0a3-6086c0dafa45"
          }
        },
        "required": [
          "object",
          "id"
        ],
        "example": {
          "object": "user",
          "id": "af171d5d-c36f-45bc-a0a3-6086c0dafa45"
        }
      }
    },
    "responses": {
      "PageResponse": {
        "description": "Returns the page that was requested or created.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Page"
            },
            "example": {
              "object": "page",
              "id": "96245c8f-1784-44a4-82ad-1941127c3ec3",
              "created_time": "2022-07-14T05:31:00.000Z",
              "last_edited_time": "2024-10-14T11:26:00.000Z",
              "created_by": {
                "object": "user",
                "id": "af171d5d-c36f-45bc-a0a3-6086c0dafa45"
              },
              "last_edited_by": {
                "object": "user",
                "id": "af171d5d-c36f-45bc-a0a3-6086c0dafa45"
              },
              "cover": {
                "type": "external",
                "external": {
                  "url": "https://www.notion.so/images/page-cover/nasa_space_shuttle_columbia_and_sunrise.jpg"
                }
              },
              "icon": {
                "type": "emoji",
                "emoji": "ðŸŒ„"
              },
              "parent": {
                "type": "page_id",
                "page_id": "11f88fcd-daf4-802e-b645-eb2d041a759b"
              },
              "archived": false,
              "in_trash": false,
              "properties": {
                "title": {
                  "id": "title",
                  "type": "title",
                  "title": [
                    {
                      "type": "text",
                      "text": {
                        "content": "Example Page",
                        "link": null
                      },
                      "annotations": {
                        "bold": false,
                        "italic": false,
                        "strikethrough": false,
                        "underline": false,
                        "code": false,
                        "color": "default"
                      },
                      "plain_text": "Example Page",
                      "href": null
                    }
                  ]
                }
              },
              "url": "https://www.notion.so/Example-Page-96245c8f178444a482ad1941127c3ec3",
              "public_url": "https://fae-tools.notion.site/Example-Page-96245c8f178444a482ad1941127c3ec3",
              "request_id": "3620d8d3-11e4-473b-87c9-fddfa7801d6d"
            }
          }
        }
      }
    },
    "parameters": {
      "NotionVersion": {
        "name": "NotionVersion",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "example": "2022-06-28"
        },
        "example": "2022-06-28"
      },
      "id": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "96245c8f-1784-44a4-82ad-1941127c3ec3"
        },
        "example": "96245c8f-1784-44a4-82ad-1941127c3ec3"
      }
    },
    "securitySchemes": {
      "BearerToken": {
        "type": "http",
        "name": "NOTION_TOKEN",
        "scheme": "bearer",
        "bearerFormat": "Bearer"
      }
    }
  },
  "security": [
    {
      "BearerToken": []
    }
  ]
}